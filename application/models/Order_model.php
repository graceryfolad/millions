<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Order_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get order by ord_id
     */
    function get_order($ord_id)
    {
        return $this->db->get_where('orders',array('ord_id'=>$ord_id))->row_array();
    }
    function get_order_details($ord_id)
    {
        $this->db->where('ord_id', $ord_id);
        $this->db->join('services', 'orders.ser_code = services.ser_code');
        $this->db->join('users', 'users.us_id = orders.us_id');
        
        return $this->db->get('orders')->row_array();
    }
    
    function get_order_by_vendor($us_id)
    {
        $this->db->where('orders.us_id', $us_id);
        $this->db->join('services', 'orders.ser_code = services.ser_code');
        $this->db->join('users', 'users.us_id = orders.us_id');
        $this->db->order_by('ord_date','DESC');
        return $this->db->get('orders')->result_array();
    }
    /*
     * Get all orders
     */
    function get_all_orders()
    {
//        $this->db->where('orders.us_id', $us_id);
        $this->db->join('services', 'orders.ser_code = services.ser_code');
        $this->db->join('users', 'users.us_id = orders.us_id');
        $this->db->order_by('ord_date','DESC');
        $this->db->limit(1000);
        return $this->db->get('orders')->result_array();
        
//        return $this->db->get('orders')->result_array();
    }
    
    /*
     * function to add new order
     */
    function add_order($params)
    {
        $this->db->insert('orders',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update order
     */
    function update_order($ord_id,$params)
    {
        $this->db->where('ord_id',$ord_id);
        $response = $this->db->update('orders',$params);
        if($response)
        {
            return TRUE;
        }
        else
        {
            return FALSE;
        }
    }
    
    /*
     * function to delete order
     */
    function delete_order($ord_id)
    {
        $response = $this->db->delete('orders',array('ord_id'=>$ord_id));
        if($response)
        {
            return "order deleted successfully";
        }
        else
        {
            return "Error occuring while deleting order";
        }
    }
    
    public function GetID($user, $service, $date) {
        $this->db->select();
        $this->db->from($this->table);
        $this->db->where('us_id', $user);
        $this->db->where('ser_code', $service);
        $this->db->where('ord_date', $date);

        $query = $this->db->get();
        $qy = $query->result();
        if ($query->num_rows() > 0) {
            foreach ($qy as $key) {
                $order = array(
                    'id' => $key->ord_id,
//                
                );
            }

            return $order;
        }
        else{
            return FALSE;
        }
    }
    
    
    public function GetToday($user,$type) {
        
        $this->db->select('count(orders.ord_id) as NumberofOrder,sum(orders.amount) as TotalAmount,services.ser_name,sum(orders.ord_comm) as Commission');
        $d = date('d');
        $mn = date('m');
        $yr = date('Y');
        $this->db->from('orders');
        $this->db->join('services','services.ser_code=orders.ser_code');
        if($type ==VENDOR){
            $this->db->where('orders.us_id', $user);
        }
        
        $this->db->where('orders.ord_dy', $d);
        $this->db->where('orders.ord_mn', $mn);
        $this->db->where('orders.ord_yr', $yr);
        $this->db->where('orders.ord_status', ORDER_SUCCESS);
        $this->db->group_by('orders.ser_code');

        $query = $this->db->get();
        $qy = $query->result_array();
        if ($query->num_rows() > 0) {
//            $result=array();
//            foreach ($qy as $row) {
////                if()
//            }
            
            return $qy;
        }
        else{
            return FALSE;
        }
    }
    
    public function GetMonth($user,$type) {
        $this->db->select('count(orders.ord_id) as NumberofOrder,sum(orders.amount) as TotalAmount,services.ser_name,sum(orders.ord_comm) as Commission');
        $d = date('d');
        $mn = date('m');
        $yr = date('Y');
        $this->db->from('orders');
        $this->db->join('services','services.ser_code=orders.ser_code');
        if($type ==VENDOR){
            $this->db->where('orders.us_id', $user);
        }
        
       
        $this->db->where('orders.ord_mn', $mn);
        $this->db->where('orders.ord_yr', $yr);
        $this->db->where('orders.ord_status', ORDER_SUCCESS);
        $this->db->group_by('orders.ser_code');

        $query = $this->db->get();
        $qy = $query->result_array();
        if ($query->num_rows() > 0) {
//            $result=array();
//            foreach ($qy as $row) {
////                if()
//            }
            return $qy;
        }
        else{
            return FALSE;
        }
    }
    
}
