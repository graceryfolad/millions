<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Topup_wallet extends MY_Controller {

    public $userdetails;
    public $type;

    function __construct() {
        parent::__construct();
        $this->load->model('Topup_wallet_model');
        $this->load->model('PinDetail_model');
        $this->load->model('Wallet_model');
        $this->userdetails = $this->GetDetails();

        if ($this->userdetails['id'] > 0) {
            $this->data['balance'] = $this->Wallet_model->Balance($this->userdetails['id']);
        }

        $this->type = $this->userdetails['type'];
//        

        $this->data['uinfo'] = $this->userdetails;
    }

    /*
     * Listing of topup_wallets
     */

    function index($status = null) {
        if ($this->type == VENDOR) {
            $result = $this->Topup_wallet_model->get_topup_wallet_vendor($this->userdetails['id']);
            if (is_array($result)) {
                $this->data['topups'] = $result;
            }
            $this->data['utype']=VENDOR;
        } elseif ($this->type == ADMIN) {
            $result = $this->Topup_wallet_model->get_all_topup_wallets();
            if (is_array($result)) {
                $this->data['topups'] = $result;
            }
            $this->data['utype']=ADMIN;
        }

        if ($status != NULL) {
            if ($status == 1) {
                $this->data['epinmsg'] = "<div class=\"\alert success\">Wallet Top Up was successful</div>";
            } elseif ($status == 0) {
                $this->data['epinmsg'] = "<div class=\"alert error\">Wallet Top Up was successful</div>";
            }
            elseif ($status == 2) {
                $this->data['epinmsg'] = "<div class=\"alert error\">Pin already used</div>";
            }
        }
        $this->body = "topups";
        $this->ShowView($this->type);
    }

    /*
     * Adding a new topup_wallet
     */

    function add() {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'us_id' => $this->input->post('us_id'),
                'amount' => $this->input->post('amount'),
                'created' => $this->input->post('created'),
                'tp_status' => $this->input->post('tp_status'),
            );

            $topup_wallet_id = $this->Topup_wallet_model->add_topup_wallet($params);
            redirect('topup_wallet/index');
        } else {
            $data['_view'] = 'topup_wallet/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a topup_wallet
     */

    function edit($tp_id) {
        // check if the topup_wallet exists before trying to edit it
        $data['topup_wallet'] = $this->Topup_wallet_model->get_topup_wallet($tp_id);

        if (isset($data['topup_wallet']['tp_id'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'us_id' => $this->input->post('us_id'),
                    'amount' => $this->input->post('amount'),
                    'created' => $this->input->post('created'),
                    'tp_status' => $this->input->post('tp_status'),
                );

                $this->Topup_wallet_model->update_topup_wallet($tp_id, $params);
                redirect('topup_wallet/index');
            } else {
                $data['_view'] = 'topup_wallet/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The topup_wallet you are trying to edit does not exist.');
    }

    public function Epin_topup() {
        if (isset($_POST)) {
            if (array_key_exists('pin', $_POST)) {
                $pin = $this->input->post('pin');
                $hresult = $this->PinDetail_model->Verify_pin($pin);
                if (is_array($hresult)) {
                   
//                    update the wallet with the pin value
//                    
                    if($hresult['pin_used']==1){
                        redirect('Topup_wallet/index/2');
                    }
//                       update the pin detail
                    $key = array(
                        'pin_id' => $hresult['pin_id']
                    );
                    $data = array(
                        'pin_used' => 1,
                        'pin_usedby' => $this->userdetails['id'],
                        'pin_useddate' => date('Y-m-d H:i:s')
                    );
                    $result2 = $this->PinDetail_model->UpdatePin($key, $data);
                    if ($result2) {
//                update the member wallet
                        $balance = $this->Wallet_model->Balance($this->userdetails['id']);
                        $newbalance = $hresult['pin_value'] + $balance;
                        $params = array(
//					'us_id' => $this->input->post('vendor'),
                            'balance' => $newbalance,
                            'wal_date' => date('Y-m-d H:i:s'),
                        );
                        $this->Wallet_model->update_wallet($this->userdetails['id'], $params);
                        $topup = array(
                            'us_id' => $this->userdetails['id'],
                            'amount' => $hresult['pin_value'],
                            'created' => date('Y-m-d H:i:s'),
                            'tp_status' => 1,
                            'tp_from' => $this->userdetails['id']
                        );

                        $this->Topup_wallet_model->add_topup_wallet($topup);
                        redirect('Topup_wallet/index/1');
                    }
                } else {
                    redirect('Topup_wallet/index/0');
                }
            }
        }
    }

}
